/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { EntityTypeComponent, EntityTypeComponentInterface } from "../EntityTypeComponent";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "world",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "getEntities",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "entityType",
            type: "uint256",
          },
        ],
        internalType: "struct EntityType",
        name: "position",
        type: "tuple",
      },
    ],
    name: "getEntitiesWithValue",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "value",
        type: "bytes",
      },
    ],
    name: "getEntitiesWithValue",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getID",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "entity",
        type: "uint256",
      },
    ],
    name: "getRawValue",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "entity",
        type: "uint256",
      },
    ],
    name: "getValue",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "entityType",
            type: "uint256",
          },
        ],
        internalType: "struct EntityType",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "entity",
        type: "uint256",
      },
    ],
    name: "has",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "indexer",
        type: "address",
      },
    ],
    name: "registerIndexer",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "entity",
        type: "uint256",
      },
    ],
    name: "remove",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "entity",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "entityType",
            type: "uint256",
          },
        ],
        internalType: "struct EntityType",
        name: "value",
        type: "tuple",
      },
    ],
    name: "set",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "entity",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "value",
        type: "bytes",
      },
    ],
    name: "set",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "world",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b50604051620023bb380380620023bb8339810160408190526200003491620001a9565b600080546001600160a01b0319166001600160a01b038316908117909155819063f303477030620000827f29b7caf477ca1449e30b021befb959c576f53eb925fd3fca67dadcf8b75b5cb490565b6040516001600160e01b031960e085901b1681526001600160a01b0390921660048301526024820152604401600060405180830381600087803b158015620000c957600080fd5b505af1158015620000de573d6000803e3d6000fd5b50505050604051620000f0906200018d565b604051809103906000f0801580156200010d573d6000803e3d6000fd5b50600280546001600160a01b0319166001600160a01b03929092169190911790556040516200013c906200019b565b604051809103906000f08015801562000159573d6000803e3d6000fd5b50600380546001600160a01b03929092166001600160a01b0319928316179055600180549091163317905550620001db9050565b6104388062001a9983390190565b6104ea8062001ed183390190565b600060208284031215620001bc57600080fd5b81516001600160a01b0381168114620001d457600080fd5b9392505050565b6118ae80620001eb6000396000f3fe608060405234801561001057600080fd5b50600436106100ea5760003560e01c80638b2829471161008c578063b361be4611610066578063b361be461461021f578063b8bc073d14610232578063cccf7a8e14610252578063f2fde38b1461027557600080fd5b80638b282947146101be5780638da5cb5b146101d1578063ab9dbd07146101f157600080fd5b80634857a832116100c85780634857a832146101705780634cc82215146101835780636270c7e71461019857806375c0669c146101ab57600080fd5b80630ff4c916146100ef57806330b67baa1461011657806331b933b91461015b575b600080fd5b6101026100fd366004611266565b610288565b604051905181526020015b60405180910390f35b6000546101369073ffffffffffffffffffffffffffffffffffffffff1681565b60405173ffffffffffffffffffffffffffffffffffffffff909116815260200161010d565b6101636102ca565b60405161010d919061127f565b61016361017e3660046112db565b610385565b610196610191366004611266565b6103b8565b005b6101966101a63660046112f7565b610796565b6101966101b9366004611324565b6107c6565b6101966101cc366004611466565b61094e565b6001546101369073ffffffffffffffffffffffffffffffffffffffff1681565b6040517f29b7caf477ca1449e30b021befb959c576f53eb925fd3fca67dadcf8b75b5cb4815260200161010d565b61016361022d3660046114ad565b610d14565b610245610240366004611266565b610dd2565b60405161010d9190611564565b610265610260366004611266565b610e74565b604051901515815260200161010d565b610196610283366004611324565b610f08565b60408051602081019091526000815260006102a283610dd2565b8060200190518101906102b59190611577565b60408051602081019091529081529392505050565b600254604080517f410d59cc000000000000000000000000000000000000000000000000000000008152905160609273ffffffffffffffffffffffffffffffffffffffff169163410d59cc9160048083019260009291908290030181865afa15801561033a573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01682016040526103809190810190611590565b905090565b60606103b28260405160200161039e9135815260200190565b604051602081830303815290604052610d14565b92915050565b60015473ffffffffffffffffffffffffffffffffffffffff16331461043e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601360248201527f4f4e4c595f434f4e54524143545f4f574e45520000000000000000000000000060448201526064015b60405180910390fd5b60035460008281526004602052604090819020905173ffffffffffffffffffffffffffffffffffffffff909216916385edea139161047b91611683565b60405190819003812060e083901b7fffffffff000000000000000000000000000000000000000000000000000000001682526004820152602401602060405180830381865afa1580156104d2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104f69190611577565b156107935760035460008281526004602052604090819020905173ffffffffffffffffffffffffffffffffffffffff90921691636526db7a9161053891611683565b60405190819003812060e083901b7fffffffff00000000000000000000000000000000000000000000000000000000168252600482015260248101849052604401600060405180830381600087803b15801561059357600080fd5b505af11580156105a7573d6000803e3d6000fd5b50506002546040517f4cc822150000000000000000000000000000000000000000000000000000000081526004810185905273ffffffffffffffffffffffffffffffffffffffff9091169250634cc822159150602401600060405180830381600087803b15801561061757600080fd5b505af115801561062b573d6000803e3d6000fd5b5050506000828152600460205260408120610647925090611193565b60005b600554811015610707576005818154811061066757610667611755565b6000918252602090912001546040517f4cc822150000000000000000000000000000000000000000000000000000000081526004810184905273ffffffffffffffffffffffffffffffffffffffff90911690634cc8221590602401600060405180830381600087803b1580156106dc57600080fd5b505af11580156106f0573d6000803e3d6000fd5b5050505080806106ff90611784565b91505061064a565b506000546040517fd803064a0000000000000000000000000000000000000000000000000000000081523060048201526024810183905273ffffffffffffffffffffffffffffffffffffffff9091169063d803064a90604401600060405180830381600087803b15801561077a57600080fd5b505af115801561078e573d6000803e3d6000fd5b505050505b50565b6107c282826040516020016107ae9135815260200190565b60405160208183030381529060405261094e565b5050565b60015473ffffffffffffffffffffffffffffffffffffffff163314610847576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601360248201527f4f4e4c595f434f4e54524143545f4f574e4552000000000000000000000000006044820152606401610435565b610871817f4ede9a2d00000000000000000000000000000000000000000000000000000000610fd0565b6108d7576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f476976656e2061646472657373206973206e6f7420616e20696e64657865722e6044820152606401610435565b600580546001810182556000919091527f036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db00180547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff92909216919091179055565b60015473ffffffffffffffffffffffffffffffffffffffff1633146109cf576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601360248201527f4f4e4c595f434f4e54524143545f4f574e4552000000000000000000000000006044820152606401610435565b6002546040517f1003e2d20000000000000000000000000000000000000000000000000000000081526004810184905273ffffffffffffffffffffffffffffffffffffffff90911690631003e2d290602401600060405180830381600087803b158015610a3b57600080fd5b505af1158015610a4f573d6000803e3d6000fd5b505060035460008581526004602052604090819020905173ffffffffffffffffffffffffffffffffffffffff9092169350636526db7a9250610a9091611683565b60405190819003812060e083901b7fffffffff00000000000000000000000000000000000000000000000000000000168252600482015260248101859052604401600060405180830381600087803b158015610aeb57600080fd5b505af1158015610aff573d6000803e3d6000fd5b50505060008381526004602090815260409091208351610b24935090918401906111cd565b50600354815160208301206040517f771602f700000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff9092169163771602f791610b8b918690600401918252602082015260400190565b600060405180830381600087803b158015610ba557600080fd5b505af1158015610bb9573d6000803e3d6000fd5b5050505060005b600554811015610c835760058181548110610bdd57610bdd611755565b6000918252602090912001546040517f0216b83800000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff90911690630216b83890610c3e90869086906004016117e3565b600060405180830381600087803b158015610c5857600080fd5b505af1158015610c6c573d6000803e3d6000fd5b505050508080610c7b90611784565b915050610bc0565b506000546040517faf104e4000000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff9091169063af104e4090610cde903090869086906004016117fc565b600060405180830381600087803b158015610cf857600080fd5b505af1158015610d0c573d6000803e3d6000fd5b505050505050565b600354815160208301206040517f796c5e94000000000000000000000000000000000000000000000000000000008152600481019190915260609173ffffffffffffffffffffffffffffffffffffffff169063796c5e9490602401600060405180830381865afa158015610d8c573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01682016040526103b29190810190611590565b6000818152600460205260409020805460609190610def90611636565b80601f0160208091040260200160405190810160405280929190818152602001828054610e1b90611636565b8015610e685780601f10610e3d57610100808354040283529160200191610e68565b820191906000526020600020905b815481529060010190602001808311610e4b57829003601f168201915b50505050509050919050565b6002546040517fcccf7a8e0000000000000000000000000000000000000000000000000000000081526004810183905260009173ffffffffffffffffffffffffffffffffffffffff169063cccf7a8e90602401602060405180830381865afa158015610ee4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103b2919061183a565b60015473ffffffffffffffffffffffffffffffffffffffff163314610f89576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601360248201527f4f4e4c595f434f4e54524143545f4f574e4552000000000000000000000000006044820152606401610435565b600180547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff92909216919091179055565b6000610fdb83610ff3565b8015610fec5750610fec8383611057565b9392505050565b600061101f827f01ffc9a700000000000000000000000000000000000000000000000000000000611057565b80156103b25750611050827fffffffff00000000000000000000000000000000000000000000000000000000611057565b1592915050565b604080517fffffffff00000000000000000000000000000000000000000000000000000000831660248083019190915282518083039091018152604490910182526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167f01ffc9a7000000000000000000000000000000000000000000000000000000001790529051600091908290819073ffffffffffffffffffffffffffffffffffffffff8716906175309061111190869061185c565b6000604051808303818686fa925050503d806000811461114d576040519150601f19603f3d011682016040523d82523d6000602084013e611152565b606091505b509150915060208151101561116d57600093505050506103b2565b818015611189575080806020019051810190611189919061183a565b9695505050505050565b50805461119f90611636565b6000825580601f106111af575050565b601f0160209004906000526020600020908101906107939190611251565b8280546111d990611636565b90600052602060002090601f0160209004810192826111fb5760008555611241565b82601f1061121457805160ff1916838001178555611241565b82800160010185558215611241579182015b82811115611241578251825591602001919060010190611226565b5061124d929150611251565b5090565b5b8082111561124d5760008155600101611252565b60006020828403121561127857600080fd5b5035919050565b6020808252825182820181905260009190848201906040850190845b818110156112b75783518352928401929184019160010161129b565b50909695505050505050565b6000602082840312156112d557600080fd5b50919050565b6000602082840312156112ed57600080fd5b610fec83836112c3565b6000806040838503121561130a57600080fd5b8235915061131b84602085016112c3565b90509250929050565b60006020828403121561133657600080fd5b813573ffffffffffffffffffffffffffffffffffffffff81168114610fec57600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810167ffffffffffffffff811182821017156113d0576113d061135a565b604052919050565b600082601f8301126113e957600080fd5b813567ffffffffffffffff8111156114035761140361135a565b61143460207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f84011601611389565b81815284602083860101111561144957600080fd5b816020850160208301376000918101602001919091529392505050565b6000806040838503121561147957600080fd5b82359150602083013567ffffffffffffffff81111561149757600080fd5b6114a3858286016113d8565b9150509250929050565b6000602082840312156114bf57600080fd5b813567ffffffffffffffff8111156114d657600080fd5b6114e2848285016113d8565b949350505050565b60005b838110156115055781810151838201526020016114ed565b83811115611514576000848401525b50505050565b600081518084526115328160208601602086016114ea565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b602081526000610fec602083018461151a565b60006020828403121561158957600080fd5b5051919050565b600060208083850312156115a357600080fd5b825167ffffffffffffffff808211156115bb57600080fd5b818501915085601f8301126115cf57600080fd5b8151818111156115e1576115e161135a565b8060051b91506115f2848301611389565b818152918301840191848101908884111561160c57600080fd5b938501935b8385101561162a57845182529385019390850190611611565b98975050505050505050565b600181811c9082168061164a57607f821691505b6020821081036112d5577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600080835481600182811c91508083168061169f57607f831692505b602080841082036116d7577f4e487b710000000000000000000000000000000000000000000000000000000086526022600452602486fd5b8180156116eb576001811461171a57611747565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00861689528489019650611747565b60008a81526020902060005b8681101561173f5781548b820152908501908301611726565b505084890196505b509498975050505050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82036117dc577f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b5060010190565b8281526040602082015260006114e2604083018461151a565b73ffffffffffffffffffffffffffffffffffffffff84168152826020820152606060408201526000611831606083018461151a565b95945050505050565b60006020828403121561184c57600080fd5b81518015158114610fec57600080fd5b6000825161186e8184602087016114ea565b919091019291505056fea264697066735822122024144c168edd6bd30561f9e5779bda2281096b49328cab283b0beb2bd420e02564736f6c634300080d0033608060405234801561001057600080fd5b50610418806100206000396000f3fe608060405234801561001057600080fd5b50600436106100675760003560e01c80634cc82215116100505780634cc822151461009f578063949d225d146100b2578063cccf7a8e146100c357600080fd5b80631003e2d21461006c578063410d59cc14610081575b600080fd5b61007f61007a3660046102e9565b6100e6565b005b610089610138565b6040516100969190610302565b60405180910390f35b61007f6100ad3660046102e9565b610190565b600054604051908152602001610096565b6100d66100d13660046102e9565b610286565b6040519015158152602001610096565b6100ef81610286565b156100f75750565b600080548282526001602081905260408320829055810182559080527f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e5630155565b6060600080548060200260200160405190810160405280929190818152602001828054801561018657602002820191906000526020600020905b815481526020019060010190808311610172575b5050505050905090565b61019981610286565b6101a05750565b600080546101b090600190610346565b815481106101c0576101c0610384565b906000526020600020015460006001600084815260200190815260200160002054815481106101f1576101f1610384565b6000918252602080832090910192909255828152600191829052604081205481549092919081908490811061022857610228610384565b90600052602060002001548152602001908152602001600020819055506001600082815260200190815260200160002060009055600080548061026d5761026d6103b3565b6001900381819060005260206000200160009055905550565b60008054810361029857506000919050565b60008281526001602052604081205490036102d45781600080815481106102c1576102c1610384565b9060005260206000200154149050919050565b50600090815260016020526040902054151590565b6000602082840312156102fb57600080fd5b5035919050565b6020808252825182820181905260009190848201906040850190845b8181101561033a5783518352928401929184019160010161031e565b50909695505050505050565b60008282101561037f577f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b500390565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603160045260246000fdfea26469706673582212205292a3005c77dfed9911e963e3bcb8f5f3cb90da66eee10c9370a606228974d464736f6c634300080d0033608060405234801561001057600080fd5b506104ca806100206000396000f3fe608060405234801561001057600080fd5b50600436106100675760003560e01c8063796c5e9411610050578063796c5e941461009457806385edea13146100bd578063a0265ff8146100eb57600080fd5b80636526db7a1461006c578063771602f714610081575b600080fd5b61007f61007a366004610379565b61010e565b005b61007f61008f366004610379565b61023d565b6100a76100a236600461039b565b610286565b6040516100b491906103b4565b60405180910390f35b6100dd6100cb36600461039b565b60009081526020819052604090205490565b6040519081526020016100b4565b6100fe6100f9366004610379565b6102e6565b60405190151581526020016100b4565b61011882826102e6565b610120575050565b6000828152602081905260409020805461013c906001906103f8565b8154811061014c5761014c610436565b6000918252602080832090910154848352828252604080842060018452818520868652909352909220548154811061018657610186610436565b6000918252602080832090910192909255838152600182526040808220848352808452818320548684528385529183208584529381905283549193909291849081106101d4576101d4610436565b6000918252602080832090910154835282810193909352604091820181209390935584835260018252808320848452825280832083905584835290829052902080548061022357610223610465565b600190038181906000526020600020016000905590555050565b61024782826102e6565b15610250575050565b60009182526020828152604080842080546001808552838720868852855292862081905585845291820181558452922090910155565b600081815260208181526040918290208054835181840281018401909452808452606093928301828280156102da57602002820191906000526020600020905b8154815260200190600101908083116102c6575b50505050509050919050565b600082815260208190526040812054810361030357506000610373565b60008381526001602090815260408083208584529091528120549003610355576000838152602081905260408120805484929061034257610342610436565b9060005260206000200154149050610373565b50600082815260016020908152604080832084845290915290205415155b92915050565b6000806040838503121561038c57600080fd5b50508035926020909101359150565b6000602082840312156103ad57600080fd5b5035919050565b6020808252825182820181905260009190848201906040850190845b818110156103ec578351835292840192918401916001016103d0565b50909695505050505050565b600082821015610431577f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b500390565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603160045260246000fdfea2646970667358221220f8f68ea0b001ef3409e07d74707055816f8de81b138f131c049cfc0b9c6cfca764736f6c634300080d0033";

type EntityTypeComponentConstructorParams = [signer?: Signer] | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (xs: EntityTypeComponentConstructorParams): xs is ConstructorParameters<typeof ContractFactory> =>
  xs.length > 1;

export class EntityTypeComponent__factory extends ContractFactory {
  constructor(...args: EntityTypeComponentConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "EntityTypeComponent";
  }

  deploy(world: string, overrides?: Overrides & { from?: string | Promise<string> }): Promise<EntityTypeComponent> {
    return super.deploy(world, overrides || {}) as Promise<EntityTypeComponent>;
  }
  getDeployTransaction(world: string, overrides?: Overrides & { from?: string | Promise<string> }): TransactionRequest {
    return super.getDeployTransaction(world, overrides || {});
  }
  attach(address: string): EntityTypeComponent {
    return super.attach(address) as EntityTypeComponent;
  }
  connect(signer: Signer): EntityTypeComponent__factory {
    return super.connect(signer) as EntityTypeComponent__factory;
  }
  static readonly contractName: "EntityTypeComponent";
  public readonly contractName: "EntityTypeComponent";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): EntityTypeComponentInterface {
    return new utils.Interface(_abi) as EntityTypeComponentInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): EntityTypeComponent {
    return new Contract(address, _abi, signerOrProvider) as EntityTypeComponent;
  }
}
