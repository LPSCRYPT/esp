/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { InitializeFacet, InitializeFacetInterface } from "../InitializeFacet";

const _abi = [
  {
    inputs: [
      {
        components: [
          {
            internalType: "bool",
            name: "resetCallerEntityID",
            type: "bool",
          },
          {
            internalType: "address",
            name: "personaMirror",
            type: "address",
          },
        ],
        internalType: "struct Config",
        name: "config",
        type: "tuple",
      },
    ],
    name: "initializeExternally",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "accessControllerAddr",
        type: "address",
      },
    ],
    name: "registerAccessControllerExternally",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "contentCreatorAddr",
        type: "address",
      },
    ],
    name: "registerContentCreatorExternally",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "embodiedSystemAddr",
        type: "address",
      },
      {
        internalType: "bytes4",
        name: "selector",
        type: "bytes4",
      },
    ],
    name: "registerEmbodiedSystemExternally",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "";

type InitializeFacetConstructorParams = [signer?: Signer] | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (xs: InitializeFacetConstructorParams): xs is ConstructorParameters<typeof ContractFactory> =>
  xs.length > 1;

export class InitializeFacet__factory extends ContractFactory {
  constructor(...args: InitializeFacetConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "InitializeFacet";
  }

  deploy(overrides?: Overrides & { from?: string | Promise<string> }): Promise<InitializeFacet> {
    return super.deploy(overrides || {}) as Promise<InitializeFacet>;
  }
  getDeployTransaction(overrides?: Overrides & { from?: string | Promise<string> }): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): InitializeFacet {
    return super.attach(address) as InitializeFacet;
  }
  connect(signer: Signer): InitializeFacet__factory {
    return super.connect(signer) as InitializeFacet__factory;
  }
  static readonly contractName: "InitializeFacet";
  public readonly contractName: "InitializeFacet";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): InitializeFacetInterface {
    return new utils.Interface(_abi) as InitializeFacetInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): InitializeFacet {
    return new Contract(address, _abi, signerOrProvider) as InitializeFacet;
  }
}
