/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  EmbodiedSystemArgumentComponent,
  EmbodiedSystemArgumentComponentInterface,
} from "../EmbodiedSystemArgumentComponent";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "world",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "getEntities",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "value",
        type: "bytes",
      },
    ],
    name: "getEntitiesWithValue",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getID",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "entity",
        type: "uint256",
      },
    ],
    name: "getRawValue",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "entity",
        type: "uint256",
      },
    ],
    name: "getValue",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "entity",
        type: "uint256",
      },
    ],
    name: "has",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "indexer",
        type: "address",
      },
    ],
    name: "registerIndexer",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "entity",
        type: "uint256",
      },
    ],
    name: "remove",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "entity",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "value",
        type: "bytes",
      },
    ],
    name: "set",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "world",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162002285380380620022858339810160408190526200003491620001a9565b600080546001600160a01b0319166001600160a01b038316908117909155819063f303477030620000827f0187e81a3a92b0d0cbf329dd843ad56df485cc23bd1186a3b42cddf2138015a390565b6040516001600160e01b031960e085901b1681526001600160a01b0390921660048301526024820152604401600060405180830381600087803b158015620000c957600080fd5b505af1158015620000de573d6000803e3d6000fd5b50505050604051620000f0906200018d565b604051809103906000f0801580156200010d573d6000803e3d6000fd5b50600280546001600160a01b0319166001600160a01b03929092169190911790556040516200013c906200019b565b604051809103906000f08015801562000159573d6000803e3d6000fd5b50600380546001600160a01b03929092166001600160a01b0319928316179055600180549091163317905550620001db9050565b610438806200196383390190565b6104ea8062001d9b83390190565b600060208284031215620001bc57600080fd5b81516001600160a01b0381168114620001d457600080fd5b9392505050565b61177880620001eb6000396000f3fe608060405234801561001057600080fd5b50600436106100d45760003560e01c80638da5cb5b11610081578063b8bc073d1161005b578063b8bc073d146101f8578063cccf7a8e1461020b578063f2fde38b1461022e57600080fd5b80638da5cb5b14610197578063ab9dbd07146101b7578063b361be46146101e557600080fd5b80634cc82215116100b25780634cc822151461015c57806375c0669c146101715780638b2829471461018457600080fd5b80630ff4c916146100d957806330b67baa1461010257806331b933b914610147575b600080fd5b6100ec6100e736600461118b565b610241565b6040516100f9919061121e565b60405180910390f35b6000546101229073ffffffffffffffffffffffffffffffffffffffff1681565b60405173ffffffffffffffffffffffffffffffffffffffff90911681526020016100f9565b61014f610252565b6040516100f99190611231565b61016f61016a36600461118b565b61030d565b005b61016f61017f366004611275565b6106eb565b61016f6101923660046113b7565b610873565b6001546101229073ffffffffffffffffffffffffffffffffffffffff1681565b6040517f0187e81a3a92b0d0cbf329dd843ad56df485cc23bd1186a3b42cddf2138015a381526020016100f9565b61014f6101f33660046113fe565b610c39565b6100ec61020636600461118b565b610cf7565b61021e61021936600461118b565b610d99565b60405190151581526020016100f9565b61016f61023c366004611275565b610e2d565b606061024c82610cf7565b92915050565b600254604080517f410d59cc000000000000000000000000000000000000000000000000000000008152905160609273ffffffffffffffffffffffffffffffffffffffff169163410d59cc9160048083019260009291908290030181865afa1580156102c2573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0168201604052610308919081019061143b565b905090565b60015473ffffffffffffffffffffffffffffffffffffffff163314610393576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601360248201527f4f4e4c595f434f4e54524143545f4f574e45520000000000000000000000000060448201526064015b60405180910390fd5b60035460008281526004602052604090819020905173ffffffffffffffffffffffffffffffffffffffff909216916385edea13916103d091611534565b60405190819003812060e083901b7fffffffff000000000000000000000000000000000000000000000000000000001682526004820152602401602060405180830381865afa158015610427573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061044b9190611606565b156106e85760035460008281526004602052604090819020905173ffffffffffffffffffffffffffffffffffffffff90921691636526db7a9161048d91611534565b60405190819003812060e083901b7fffffffff00000000000000000000000000000000000000000000000000000000168252600482015260248101849052604401600060405180830381600087803b1580156104e857600080fd5b505af11580156104fc573d6000803e3d6000fd5b50506002546040517f4cc822150000000000000000000000000000000000000000000000000000000081526004810185905273ffffffffffffffffffffffffffffffffffffffff9091169250634cc822159150602401600060405180830381600087803b15801561056c57600080fd5b505af1158015610580573d6000803e3d6000fd5b505050600082815260046020526040812061059c9250906110b8565b60005b60055481101561065c57600581815481106105bc576105bc61161f565b6000918252602090912001546040517f4cc822150000000000000000000000000000000000000000000000000000000081526004810184905273ffffffffffffffffffffffffffffffffffffffff90911690634cc8221590602401600060405180830381600087803b15801561063157600080fd5b505af1158015610645573d6000803e3d6000fd5b5050505080806106549061164e565b91505061059f565b506000546040517fd803064a0000000000000000000000000000000000000000000000000000000081523060048201526024810183905273ffffffffffffffffffffffffffffffffffffffff9091169063d803064a90604401600060405180830381600087803b1580156106cf57600080fd5b505af11580156106e3573d6000803e3d6000fd5b505050505b50565b60015473ffffffffffffffffffffffffffffffffffffffff16331461076c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601360248201527f4f4e4c595f434f4e54524143545f4f574e455200000000000000000000000000604482015260640161038a565b610796817f4ede9a2d00000000000000000000000000000000000000000000000000000000610ef5565b6107fc576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f476976656e2061646472657373206973206e6f7420616e20696e64657865722e604482015260640161038a565b600580546001810182556000919091527f036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db00180547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff92909216919091179055565b60015473ffffffffffffffffffffffffffffffffffffffff1633146108f4576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601360248201527f4f4e4c595f434f4e54524143545f4f574e455200000000000000000000000000604482015260640161038a565b6002546040517f1003e2d20000000000000000000000000000000000000000000000000000000081526004810184905273ffffffffffffffffffffffffffffffffffffffff90911690631003e2d290602401600060405180830381600087803b15801561096057600080fd5b505af1158015610974573d6000803e3d6000fd5b505060035460008581526004602052604090819020905173ffffffffffffffffffffffffffffffffffffffff9092169350636526db7a92506109b591611534565b60405190819003812060e083901b7fffffffff00000000000000000000000000000000000000000000000000000000168252600482015260248101859052604401600060405180830381600087803b158015610a1057600080fd5b505af1158015610a24573d6000803e3d6000fd5b50505060008381526004602090815260409091208351610a49935090918401906110f2565b50600354815160208301206040517f771602f700000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff9092169163771602f791610ab0918690600401918252602082015260400190565b600060405180830381600087803b158015610aca57600080fd5b505af1158015610ade573d6000803e3d6000fd5b5050505060005b600554811015610ba85760058181548110610b0257610b0261161f565b6000918252602090912001546040517f0216b83800000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff90911690630216b83890610b6390869086906004016116ad565b600060405180830381600087803b158015610b7d57600080fd5b505af1158015610b91573d6000803e3d6000fd5b505050508080610ba09061164e565b915050610ae5565b506000546040517faf104e4000000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff9091169063af104e4090610c03903090869086906004016116c6565b600060405180830381600087803b158015610c1d57600080fd5b505af1158015610c31573d6000803e3d6000fd5b505050505050565b600354815160208301206040517f796c5e94000000000000000000000000000000000000000000000000000000008152600481019190915260609173ffffffffffffffffffffffffffffffffffffffff169063796c5e9490602401600060405180830381865afa158015610cb1573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016820160405261024c919081019061143b565b6000818152600460205260409020805460609190610d14906114e1565b80601f0160208091040260200160405190810160405280929190818152602001828054610d40906114e1565b8015610d8d5780601f10610d6257610100808354040283529160200191610d8d565b820191906000526020600020905b815481529060010190602001808311610d7057829003601f168201915b50505050509050919050565b6002546040517fcccf7a8e0000000000000000000000000000000000000000000000000000000081526004810183905260009173ffffffffffffffffffffffffffffffffffffffff169063cccf7a8e90602401602060405180830381865afa158015610e09573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061024c9190611704565b60015473ffffffffffffffffffffffffffffffffffffffff163314610eae576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601360248201527f4f4e4c595f434f4e54524143545f4f574e455200000000000000000000000000604482015260640161038a565b600180547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff92909216919091179055565b6000610f0083610f18565b8015610f115750610f118383610f7c565b9392505050565b6000610f44827f01ffc9a700000000000000000000000000000000000000000000000000000000610f7c565b801561024c5750610f75827fffffffff00000000000000000000000000000000000000000000000000000000610f7c565b1592915050565b604080517fffffffff00000000000000000000000000000000000000000000000000000000831660248083019190915282518083039091018152604490910182526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167f01ffc9a7000000000000000000000000000000000000000000000000000000001790529051600091908290819073ffffffffffffffffffffffffffffffffffffffff87169061753090611036908690611726565b6000604051808303818686fa925050503d8060008114611072576040519150601f19603f3d011682016040523d82523d6000602084013e611077565b606091505b5091509150602081511015611092576000935050505061024c565b8180156110ae5750808060200190518101906110ae9190611704565b9695505050505050565b5080546110c4906114e1565b6000825580601f106110d4575050565b601f0160209004906000526020600020908101906106e89190611176565b8280546110fe906114e1565b90600052602060002090601f0160209004810192826111205760008555611166565b82601f1061113957805160ff1916838001178555611166565b82800160010185558215611166579182015b8281111561116657825182559160200191906001019061114b565b50611172929150611176565b5090565b5b808211156111725760008155600101611177565b60006020828403121561119d57600080fd5b5035919050565b60005b838110156111bf5781810151838201526020016111a7565b838111156111ce576000848401525b50505050565b600081518084526111ec8160208601602086016111a4565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b602081526000610f1160208301846111d4565b6020808252825182820181905260009190848201906040850190845b818110156112695783518352928401929184019160010161124d565b50909695505050505050565b60006020828403121561128757600080fd5b813573ffffffffffffffffffffffffffffffffffffffff81168114610f1157600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810167ffffffffffffffff81118282101715611321576113216112ab565b604052919050565b600082601f83011261133a57600080fd5b813567ffffffffffffffff811115611354576113546112ab565b61138560207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f840116016112da565b81815284602083860101111561139a57600080fd5b816020850160208301376000918101602001919091529392505050565b600080604083850312156113ca57600080fd5b82359150602083013567ffffffffffffffff8111156113e857600080fd5b6113f485828601611329565b9150509250929050565b60006020828403121561141057600080fd5b813567ffffffffffffffff81111561142757600080fd5b61143384828501611329565b949350505050565b6000602080838503121561144e57600080fd5b825167ffffffffffffffff8082111561146657600080fd5b818501915085601f83011261147a57600080fd5b81518181111561148c5761148c6112ab565b8060051b915061149d8483016112da565b81815291830184019184810190888411156114b757600080fd5b938501935b838510156114d5578451825293850193908501906114bc565b98975050505050505050565b600181811c908216806114f557607f821691505b60208210810361152e577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b50919050565b600080835481600182811c91508083168061155057607f831692505b60208084108203611588577f4e487b710000000000000000000000000000000000000000000000000000000086526022600452602486fd5b81801561159c57600181146115cb576115f8565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff008616895284890196506115f8565b60008a81526020902060005b868110156115f05781548b8201529085019083016115d7565b505084890196505b509498975050505050505050565b60006020828403121561161857600080fd5b5051919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82036116a6577f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b5060010190565b82815260406020820152600061143360408301846111d4565b73ffffffffffffffffffffffffffffffffffffffff841681528260208201526060604082015260006116fb60608301846111d4565b95945050505050565b60006020828403121561171657600080fd5b81518015158114610f1157600080fd5b600082516117388184602087016111a4565b919091019291505056fea26469706673582212201d17f95ca3b4d263184154ae8bbd470f7979a7894fba35a0302064cc271d781564736f6c634300080d0033608060405234801561001057600080fd5b50610418806100206000396000f3fe608060405234801561001057600080fd5b50600436106100675760003560e01c80634cc82215116100505780634cc822151461009f578063949d225d146100b2578063cccf7a8e146100c357600080fd5b80631003e2d21461006c578063410d59cc14610081575b600080fd5b61007f61007a3660046102e9565b6100e6565b005b610089610138565b6040516100969190610302565b60405180910390f35b61007f6100ad3660046102e9565b610190565b600054604051908152602001610096565b6100d66100d13660046102e9565b610286565b6040519015158152602001610096565b6100ef81610286565b156100f75750565b600080548282526001602081905260408320829055810182559080527f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e5630155565b6060600080548060200260200160405190810160405280929190818152602001828054801561018657602002820191906000526020600020905b815481526020019060010190808311610172575b5050505050905090565b61019981610286565b6101a05750565b600080546101b090600190610346565b815481106101c0576101c0610384565b906000526020600020015460006001600084815260200190815260200160002054815481106101f1576101f1610384565b6000918252602080832090910192909255828152600191829052604081205481549092919081908490811061022857610228610384565b90600052602060002001548152602001908152602001600020819055506001600082815260200190815260200160002060009055600080548061026d5761026d6103b3565b6001900381819060005260206000200160009055905550565b60008054810361029857506000919050565b60008281526001602052604081205490036102d45781600080815481106102c1576102c1610384565b9060005260206000200154149050919050565b50600090815260016020526040902054151590565b6000602082840312156102fb57600080fd5b5035919050565b6020808252825182820181905260009190848201906040850190845b8181101561033a5783518352928401929184019160010161031e565b50909695505050505050565b60008282101561037f577f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b500390565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603160045260246000fdfea26469706673582212205292a3005c77dfed9911e963e3bcb8f5f3cb90da66eee10c9370a606228974d464736f6c634300080d0033608060405234801561001057600080fd5b506104ca806100206000396000f3fe608060405234801561001057600080fd5b50600436106100675760003560e01c8063796c5e9411610050578063796c5e941461009457806385edea13146100bd578063a0265ff8146100eb57600080fd5b80636526db7a1461006c578063771602f714610081575b600080fd5b61007f61007a366004610379565b61010e565b005b61007f61008f366004610379565b61023d565b6100a76100a236600461039b565b610286565b6040516100b491906103b4565b60405180910390f35b6100dd6100cb36600461039b565b60009081526020819052604090205490565b6040519081526020016100b4565b6100fe6100f9366004610379565b6102e6565b60405190151581526020016100b4565b61011882826102e6565b610120575050565b6000828152602081905260409020805461013c906001906103f8565b8154811061014c5761014c610436565b6000918252602080832090910154848352828252604080842060018452818520868652909352909220548154811061018657610186610436565b6000918252602080832090910192909255838152600182526040808220848352808452818320548684528385529183208584529381905283549193909291849081106101d4576101d4610436565b6000918252602080832090910154835282810193909352604091820181209390935584835260018252808320848452825280832083905584835290829052902080548061022357610223610465565b600190038181906000526020600020016000905590555050565b61024782826102e6565b15610250575050565b60009182526020828152604080842080546001808552838720868852855292862081905585845291820181558452922090910155565b600081815260208181526040918290208054835181840281018401909452808452606093928301828280156102da57602002820191906000526020600020905b8154815260200190600101908083116102c6575b50505050509050919050565b600082815260208190526040812054810361030357506000610373565b60008381526001602090815260408083208584529091528120549003610355576000838152602081905260408120805484929061034257610342610436565b9060005260206000200154149050610373565b50600082815260016020908152604080832084845290915290205415155b92915050565b6000806040838503121561038c57600080fd5b50508035926020909101359150565b6000602082840312156103ad57600080fd5b5035919050565b6020808252825182820181905260009190848201906040850190845b818110156103ec578351835292840192918401916001016103d0565b50909695505050505050565b600082821015610431577f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b500390565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603160045260246000fdfea2646970667358221220f8f68ea0b001ef3409e07d74707055816f8de81b138f131c049cfc0b9c6cfca764736f6c634300080d0033";

type EmbodiedSystemArgumentComponentConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: EmbodiedSystemArgumentComponentConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class EmbodiedSystemArgumentComponent__factory extends ContractFactory {
  constructor(...args: EmbodiedSystemArgumentComponentConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "EmbodiedSystemArgumentComponent";
  }

  deploy(
    world: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<EmbodiedSystemArgumentComponent> {
    return super.deploy(world, overrides || {}) as Promise<EmbodiedSystemArgumentComponent>;
  }
  getDeployTransaction(world: string, overrides?: Overrides & { from?: string | Promise<string> }): TransactionRequest {
    return super.getDeployTransaction(world, overrides || {});
  }
  attach(address: string): EmbodiedSystemArgumentComponent {
    return super.attach(address) as EmbodiedSystemArgumentComponent;
  }
  connect(signer: Signer): EmbodiedSystemArgumentComponent__factory {
    return super.connect(signer) as EmbodiedSystemArgumentComponent__factory;
  }
  static readonly contractName: "EmbodiedSystemArgumentComponent";
  public readonly contractName: "EmbodiedSystemArgumentComponent";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): EmbodiedSystemArgumentComponentInterface {
    return new utils.Interface(_abi) as EmbodiedSystemArgumentComponentInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): EmbodiedSystemArgumentComponent {
    return new Contract(address, _abi, signerOrProvider) as EmbodiedSystemArgumentComponent;
  }
}
